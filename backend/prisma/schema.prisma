// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN 
  GURU
  MURID
  KEPALA_TAHFIDZ
  PARENT 
  TU 
  INPUT_QURAN
}

enum JenisKelamin {
  M 
  F
}

enum TipeSesi {
  Murojah
  Hafalan  
}

enum TipeEvent {
  CREATE
  UPDATE
  DELETE
}

enum EventModelType {
  USER 
  GURU 
  KELOMPOK_TAHFIDZ
  MURID
  PARENT 
  SESSION 
  ALQURAN
  JAM_TAHFIDZ 
}

enum GolonganDarah {
  A
  B
  O
  AB
}

enum Agama {
  Islam 
  Kristen 
  Buddha
  Hindu
  Kong_Hu_Chu
  Katolik
}

enum Pendidikan {
  Tidak_Sekolah 
  SD 
  SMP 
  SMA
  Diploma
  S1
  S2
  S3
}

enum Hidup {
  HIDUP 
  MENINGGAL 
}

model User {
  id            Int     @id @default(autoincrement())
  username      String  @unique
  password      String  
  role          Role
  isGuru        GuruDetails?
  isMurid       MuridDetails? 
  isParent      ParentDetails?
  auditLogs     Event[]
}

model Guru {
  id            Int     @id @default(autoincrement())
  nig           String  @unique
  nama          String 
  email         String
  jenisKelamin  JenisKelamin
  tempatLahir   String
  tanggalLahir  DateTime
  profileUrl    String?
  deleted       Boolean     @default(false)

  guruDetails   GuruDetails?
}

model GuruDetails {
  guruId              Int
  guru                Guru                @relation(fields: [guruId], references:[id])
  userId              Int
  user                User                @relation(fields: [userId], references:[id])
  guruTahfidzDetail   GuruTahfidzDetails?
  @@id([guruId])
}

model GuruTahfidzDetails {
  guruId              Int 
  guruDetails         GuruDetails         @relation(fields: [guruId], references: [guruId])
  deleted             Boolean     @default(false)
  kelompokTahfidz     KelompokTahfidz[]
  @@id([guruId])
}

model Murid {
  id                    Int       @id @default(autoincrement())
  nis                   String    @unique
  nism                  String    @unique
  nisn                  String?    @unique
  nama                  String    
  jenisKelamin          JenisKelamin
  tempatLahir           String
  tanggalLahir          DateTime
  anakKe                Int
  jumlahSaudaraKandung  Int
  jumlahSaudaraTiri     Int
  jumlahSaudaraAngkat   Int
  golonganDarah         GolonganDarah?
  profileUrl            String?
  deleted               Boolean     @default(false)

  // tabel yang nyambung sama Murid
  muridDetails          MuridDetails?
  orangTua              Parent[]
}

model MuridDetails {  
  muridId                 Int 
  murid                   Murid             @relation(fields: [muridId], references: [id])
  userId                  Int 
  user                    User              @relation(fields: [userId], references:[id])
  tahfidzDetails          MuridTahfidzDetails?
  @@id([muridId])
}

model MuridTahfidzDetails {
  muridId                 Int 
  muridDetails            MuridDetails @relation(fields: [muridId], references: [muridId])
  kelompokTahfidzId       Int
  kelompokTahfidz         KelompokTahfidz   @relation(fields: [kelompokTahfidzId], references: [id])
  sesi                    Session[]
  @@id([muridId])
}

model Parent {
  id                    Int             @id @default(autoincrement())
  nama                  String    
  tempatLahir           String
  tanggalLahir          DateTime
  agama                 Agama
  pendidikanTerakhir    Pendidikan
  penghasilanPerBulan   Int
  pekerjaan             String
  nomorTelepon          String
  statusHidup           Hidup
  profileUrl            String?
  deleted               Boolean     @default(false)

  // Relasi dengan tabel lain 
  parentDetails         ParentDetails?
  daftarAnak            Murid[]
}

model ParentDetails {
  parentId        Int 
  parent          Parent    @relation(fields: [parentId], references: [id])
  userId          Int 
  user            User      @relation(fields: [userId], references:[id])
  @@id([parentId])
}


model Event { 
  //untuk nyimpan logs
  id            Int             @id @default(autoincrement())
  type          TipeEvent
  target        EventModelType
  targetId      Int
  actor         User            @relation(fields: [userId], references:[id])
  userId        Int 
  time          DateTime        @default(now())
}

model KelompokTahfidz {
  id                  Int             @id @default(autoincrement())
  guruId              Int 
  guruTahfidzDetail   GuruTahfidzDetails     @relation(fields: [guruId], references: [guruId])
  muridTahfidzDetail  MuridTahfidzDetails[]
}

model Session {
  id                  Int       @default(autoincrement()) @id
  type                TipeSesi // post berdasarkan get data dari tabel JamTahfidz tapi ga nyatu 
  waktu               DateTime  @default(now())
  juz                 Int 
  halaman             Int 
  awalSetoran         String 
  akhirSetoran        String 
  nilaiTajwid         Int 
  nilaiKelancaran     Int 
  nilaiMakhroj        Int 
  nilaiSifatHuruf     Int
  jamTahfidz          String // nanti postnya namaJam aja langsung 

  // relasi 
  muridId             Int
  muridTahfidzDetail  MuridTahfidzDetails   @relation(fields: [muridId], references:[muridId])
}

model JamTahfidz {
  id            Int         @id @default(autoincrement())
  waktuMulai    DateTime
  waktuSelesai  DateTime
  namaJam       String 
  tipe          TipeSesi
}

model AlQuran {
  id      Int     @id @default(autoincrement())
  ayat    Int 
  baris   Int 
  halaman Int 
  surah   Int 
  juz     Int 
  deleted Boolean @default(false)
}